package com.dao.impl;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Repository;

import com.dao.ElectionDao;
import com.model.Election;

@Repository
public class ElectionDaoImpl implements ElectionDao {

    private List<Election> elections = new ArrayList<>();
    private static Long idCounter = 1L;

    @Override
    public void addElection(Election election) {
        election.setElectionId(idCounter++);
        elections.add(election);
    }

    @Override
    public List<Election> getAllElections() {
        return elections;
    }

    @Override
    public Optional<Election> getElectionById(Long electionId) {
        return elections.stream()
                .filter(election -> election.getElectionId().equals(electionId))
                .findFirst();
    }

    @Override
    public List<Election> getElectionByName(String electionName) {
        List<Election> result = new ArrayList<>();
        for (Election election : elections) {
            if (election.getElectionName().equalsIgnoreCase(electionName)) {
                result.add(election);
            }
        }
        return result;
    }

    @Override
    public List<Election> getElectionByDate(LocalDate electionDate) {
        List<Election> result = new ArrayList<>();
        for (Election election : elections) {
            if (election.getElectionDate().equals(electionDate)) {
                result.add(election);
            }
        }
        return result;
    }

    @Override
    public void deleteElectionById(Long electionId) {
        elections.removeIf(election -> election.getElectionId().equals(electionId));
    }
}
